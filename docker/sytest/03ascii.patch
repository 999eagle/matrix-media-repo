--- tests/51media/03ascii.pl    2018-11-07 11:28:39.000000000 +0000
+++ tests/51media/03ascii_mediaonly.pl  2018-11-11 03:50:11.642993500 +0000
@@ -97,49 +97,3 @@
       });
    };

-test "Can send image in room message",
-   requires => [ $main::API_CLIENTS[0], local_user_and_room_fixtures() ],
-
-   check => sub {
-      my ( $http, $user, $room_id ) = @_;
-      test_using_client( $http )
-      ->then( sub {
-         matrix_send_room_message( $user, $room_id,
-            content => { msgtype => "m.file", body => "test.txt", url => $content_uri }
-         )
-      });
-   };
-
-test "Can fetch images in room",
-   requires => [ $main::API_CLIENTS[0], local_user_and_room_fixtures() ],
-
-   check => sub {
-      my ( $http, $user, $room_id ) = @_;
-      test_using_client( $http )
-      ->then( sub {
-         matrix_send_room_message_synced( $user, $room_id,
-            content => { msgtype => "m.text", body => "test" }
-         )
-      })->then( sub {
-         matrix_send_room_message_synced( $user, $room_id,
-            content => { msgtype => "m.file", body => "test.txt", url => $content_uri }
-         )
-      })->then( sub {
-         do_request_json_for( $user,
-            method => "GET",
-            uri    => "/api/v1/rooms/$room_id/messages",
-            params => {
-               filter => '{"contains_url":true}',
-               dir    => 'b',
-            }
-         )
-      })->then( sub {
-         my ( $body ) = @_;
-
-         assert_json_keys( $body, qw( start end chunk ));
-
-         assert_eq( scalar @{ $body->{chunk} }, 1, "Expected 1 message" );
-
-         Future->done( 1 );
-      });
-   };
